(function(global,undefined){"use strict";if(typeof global.Struct!=="undefined"){return}var STRUCT_NAME_KEY="__structName__";var REGEXP_STRUCT_TYPE=/^struct:(.+)/;var hasProxyAPI=global.Proxy&&isFunction(global.Proxy.create);var typeChecker=createChecker();var Struct={structs:{}};Struct.define=function(name,props){if(!isString(name)){throw"First argument must be String type (Struct name)"}if(!isObject(props)){throw"Second argument must be Object type (Property settings)"}if(this.structs[name]){throw name+" is already defined"}Object.keys(props).forEach(function(k){var t=props[k].type;if(!typeChecker.hasOwnProperty(t)&&!REGEXP_STRUCT_TYPE.test(t)){throw"Supported types are :"+Object.keys(typeChecker).join()+",struct:*"}if(props[k].writable===undefined){props[k].writable=true}if(isString(props[k].cond)){props[k].cond=new Function("v","return "+props[k].cond)}});props[STRUCT_NAME_KEY]={value:name,wriatble:false,enumerable:false};Object.freeze(props);this.structs[name]=props};Struct.ifdef=function(name){return!!this.structs.hasOwnProperty(name)};Struct.getType=function(obj){if(!isObjectLike(obj)){throw"First argument must be object type"}if(isObject(obj)&&obj.hasOwnProperty(STRUCT_NAME_KEY)){return obj[STRUCT_NAME_KEY]}return undefined};Struct.isStruct=function(obj){return isObject(obj)&&isString(obj[STRUCT_NAME_KEY])};var create=Struct.create=function(name,obj){if(!this.structs.hasOwnProperty(name)){throw'Struct named "'+name+'" is not defined'}var props=this.structs[name];obj=obj||{};checkInitialValue(obj,props);Object.defineProperties(obj,props);var ret;if(hasProxyAPI){ret=Proxy.create(handlerMaker(obj,props))}else{ret=Object.seal(obj)}return ret};Struct.configure=function(config){if(Object.keys(this.structs).length>0){console.log("WARNING: Some structs are already defined."+"This configure does not applied them.")}if(config["disable any check"]===true){Struct.create=createFake}if(config["disable any check"]===false){Struct.create=create}};function createFake(name,obj){obj=obj||{};Object.defineProperty(obj,STRUCT_NAME_KEY,{value:name,wriatble:false,enumerable:false});return obj}function isStructType(type,obj){var mat=type.match(REGEXP_STRUCT_TYPE);if(mat&&Struct.isStruct(obj)){return Struct.getType(obj)===mat[1]}return false}function isType(type,val){if(typeChecker[type]){return typeChecker[type](val)}return false}function checkInitialValue(obj,props){Object.keys(props).forEach(function(k){var p=props[k],val=obj[k];if(isNullOrUndefined(val)){if(p.nullable===false){throw k+" is not-nullable property but initial value is null"}return}if(isStructType(p.type,val)||isType(p.type,val)){return}var mat=p.type.match(REGEXP_STRUCT_TYPE);if(mat){var structName=mat[1];checkInitialValue(val,Struct.structs[structName]);obj[k]=Struct.create(structName,val);return}throw k+" must be "+props[k].type+" type. But initial value not matched"});Object.keys(props).forEach(function(k){var p=props[k],val=obj[k];if(p.cond&&!p.cond(val)){throw"Invalid value:"+k+"="+String(val)}});Object.keys(obj).forEach(function(k){if(!props.hasOwnProperty(k)){throw"Invalid property found:"+k}})}function handlerMaker(obj,props){var INSPECTOR_PROP_NAME="inspector";return{getOwnPropertyDescriptor:function(name){var desc=Object.getOwnPropertyDescriptor(obj,name);if(desc!==undefined){desc.configurable=true}return desc},getPropertyDescriptor:function(name){var desc=Object.getPropertyDescriptor(obj,name);if(desc!==undefined){desc.configurable=true}return desc},getOwnPropertyNames:function(){return Object.getOwnPropertyNames(obj)},getPropertyNames:function(){return Object.getPropertyNames(obj)},defineProperty:function(name,desc){throw"Cannot fix this object"},"delete":function(name){if(name in props){var desc=this.getOwnPropertyDescriptor(name);if(props[name].nullable===false){throw name+" is not allowd null or undefined"}return delete obj[name]}else{throw name+" is not defined in this struct"}},fix:function(){if(Object.isFrozen(obj)){return Object.getOwnPropertyNames(obj).map(function(name){return Object.getOwnPropertyDescriptor(obj,name)})}return undefined},has:function(name){return name in obj},hasOwn:function(name){return Object.prototype.hasOwnProperty.call(obj,name)},get:function(receiver,name){if(name in props||name==INSPECTOR_PROP_NAME){return obj[name]}else{throw name+" is not defined in this struct"}},set:function(receiver,name,val){if(name in props){var desc=this.getOwnPropertyDescriptor(name);if(desc&&!desc.writable){throw name+" is not writable property"}if(props[name].nullable===false&&isNullOrUndefined(val)){throw name+" is not allowd null or undefined"}var type=props[name].type;if(isNullOrUndefined(val)||isStructType(type,val)||isType(type,val)){}else{throw name+" must be "+props[name].type+" type"}if(props[name].cond&&!props[name].cond(val)){throw"Invalid value:"+name+"="+String(val)}obj[name]=val;return true}else{throw name+" is not defined in this struct"}},enumerate:function(){var result=[];for(var name in obj){result.push(name)}return result},keys:function(){return Object.keys(obj)}}}function createChecker(){return{string:isString,number:isNumber,"boolean":isBoolean,"function":isFunction,array:isArray,arraylike:isArrayLike,object:isObject,anyobject:isObjectLike,regexp:isRegExp,date:isDate,domnode:isDomNode}}function toString(val){return Object.prototype.toString.call(val)}function isString(val){return toString(val)==="[object String]"}function isNumber(val){return toString(val)==="[object Number]"&&!isNaN(val)}function isBoolean(val){return toString(val)==="[object Boolean]"}function isFunction(val){return toString(val)==="[object Function]"}function isArray(val){return toString(val)==="[object Array]"}function isArrayLike(val){return isArray(val)||val&&typeof val==="object"&&isNumber(val.length)}function isObject(val){return toString(val)==="[object Object]"}function isObjectLike(val){return val!==null&&typeof val==="object"}function isRegExp(val){return toString(val)==="[object RegExp]"}function isDate(val){return toString(val)==="[object Date]"}function isDomNode(val){return val&&isString(val.nodeName)&&isArrayLike(val.childNodes)}function isNullOrUndefined(val){return val===null||val===undefined}if(typeof module!="undefined"&&module.exports){module.exports=Struct}else{window.Struct=Struct}})(typeof window!="undefined"?window:global);